.form-container {
    display: flex;
    flex-direction: row;

    justify-content: space-evenly;
    align-content: center;

    flex-wrap: wrap;

    height: 100%;


    @include respond-to('small') {
        flex-direction: column;

        margin-bottom: rem(45px, small);
    }

    @include respond-to('medium') {
        flex-direction: row;

        margin-bottom: 0;
    }


}

.panel {
    display: flex;
    flex-direction: column;

    justify-content: space-between;

    font-family: $darker;
    font-size: rem(16px, large);

    &.left {

        @include respond-to('small') {
            width: 100%;

            margin-bottom: rem(30px, small);
        }

        @include respond-to('medium') {
            width: rem(481px, medium);

            margin-bottom: 0;
        }

        @include respond-to('large') {
            width: rem(481px, large);
        }
    }

    &.right {
        @include respond-to('small') {
            width: 100%;
        }

        @include respond-to('medium') {
            width: rem(550px, medium);
        }

        @include respond-to('large') {
            width: rem(550px, large);
        }

        .section {
            @include respond-to('small') {
                margin-bottom: rem(30px, small);
            }

            @include respond-to('medium') {
                margin-bottom: 0;
            }
        }
    }
}

.error {
    border: 1px solid red !important;
}

.field {
    @include respond-to('small') {
        margin-bottom: rem(15px, small);
    }

    @include respond-to('medium') {
        margin-bottom: rem(40px, medium);
    }

    @include respond-to('large') {
        margin-bottom: rem(40px, large);
    }

    &:last-child {
        margin-bottom: 0;
    }

    fieldset {
        display: flex;

        justify-content: space-between;
        flex-wrap: wrap;

        padding: 4px;

        border-radius: 26px;
    }
}

.section {
    margin-bottom: rem(40px, large);

    &:last-child {
        margin-bottom: 0;
    }

    .section-title {
        font-family: $darker;
        font-weight: 800;


        @include respond-to('small') {
            margin-bottom: rem(16px, small);

            font-size: rem(32px, small);
        }

        @include respond-to('medium') {
            margin-bottom: rem(30px, medium);

            font-size: rem(32px, medium);
        }

        @include respond-to('large') {
            margin-bottom: rem(30px, large);

            font-size: rem(32px, large);
        }
    }

}

.checkbox {
    display: flex;

    padding: 5px;

    background-color: $white;

    border: 1px solid $black;
    border-radius: 27px;

    @include respond-to('small') {
        padding: rem(6px, small);

        font-size: rem(16px, small);
    }

    @include respond-to('medium') {
        padding: rem(10px, medium);

        font-size: rem(16px, medium);
    }

    @include respond-to('medium') {
        padding: rem(10px, large);

        font-size: rem(16px, large);
    }

    label {
        display: flex;

        justify-content: space-between;
        align-items: center;

        margin: 0;

        cursor: pointer;
        flex-direction: row;
    }

    .checkbox-title {
        margin-right: 5px;
    }

    input {
        margin: 0;
        margin-left: 5px;
    }
}

.flex {
    display: flex;

    justify-content: space-between;

    align-items: center;
}

input[type=text], input[type=number], textarea {
    width: 100%;
    height: 40px;

    @include respond-to('small') {
        height: rem(33px, small);

        font-size: rem(16px, small);
        line-height: rem(16px, small);
    }

    @include respond-to('medium') {
        height: rem(40px, medium);

        font-size: rem(16px, medium);
        line-height: rem(16px, medium);
    }

    @include respond-to('large') {
        height: rem(40px, large);

        font-size: rem(16px, large);
        line-height: rem(16px, large);
    }

    padding: 8px 10px;

    font-family: $darker;
    color: $color-text;


    background-color: $white;
    background-position: 10px 10px;
    background-repeat: no-repeat;

    border: 1px solid $black;
    border-radius: 6px;
    box-shadow: none;

    resize: none;


    &::placeholder {
        opacity: 0.65;

        color: $color-text;

        @include respond-to('small') {
            font-size: rem(16px, small);
        }

        @include respond-to('medium') {
            font-size: rem(16px, medium);
        }

        @include respond-to('large') {
            font-size: rem(16px, large);
        }
    }
}

// CUSTOM SWITCHBOX
.default__check[type="checkbox"].switchbox {
    display: none;

    ~ .custom__check {
        display: flex;

        position: relative;

        align-items: center;

        @include respond-to('small') {
            height: rem(23px, small);
        }

        @include respond-to('medium') {
            height: rem(23px, medium);
        }

        @include respond-to('large') {
            height: rem(23px, large);
        }


        background-color: $grey;

        transition: all 0.4s ease;

        cursor: pointer;

        &:after {
            content: "";

            display: inline-block;
            position: absolute;

            transition: all 0.4s ease;
        }
    }

    &.switchbox {
        + .custom__check {
            @include respond-to('small') {
                width: rem(44px, small);
            }

            @include respond-to('medium') {
                width: rem(44px, medium);
            }

            @include respond-to('large') {
                width: rem(44px, large);
            }

            &:after {
                @include respond-to('small') {
                    left: rem(10px, small);

                    width: rem(6px, small);
                    height: rem(6px, small);
                }

                @include respond-to('medium') {
                    left: rem(10px, medium);

                    width: rem(6px, medium);
                    height: rem(6px, medium);
                }

                @include respond-to('large') {
                    left: rem(10px, large);

                    width: rem(6px, large);
                    height: rem(6px, large);
                }

                transform: scale(1.5);
            }
        }

        &:not(:checked) {
            ~ .custom__check {
                &:after {
                    background-color: #fff;
                }
            }
        }

        &:checked {
            ~ .custom__check {
                &:after {
                    @include respond-to('small') {
                        left: rem(28px, small);
                    }

                    @include respond-to('medium') {
                        left: rem(28px, medium);
                    }

                    @include respond-to('large') {
                        left: rem(28px, large);
                    }
                }
            }
        }
    }

    &:disabled {
        ~ .custom__check {
            opacity: 0.3;

            cursor: not-allowed;
        }
    }

    &:checked {
        ~ .custom__check {
            background-color: $purple;

            &:after {
                visibility: visible;
            }
        }
    }
}

// LEADERBOARD
.leaderboard {

    label {
        @include respond-to('small') {
            font-size: rem(16px, small);
        }

        @include respond-to('medium') {
            font-size: rem(16px, medium);
        }

        @include respond-to('large') {
            font-size: rem(16px, large);
        }
    }
}

.dropfile-container {
    position: relative;

    cursor: pointer;

    input {
        opacity: 0;

        position: absolute;
        top: 0;
        left: 0;

        width: 100%;
        height: 100%;

        cursor: pointer;
    }

    .droparea {
        display: flex;

        justify-content: space-between;
        align-items: center;

        flex-wrap: nowrap;

        width: 100%;

        padding: 10px;

        background-color: $white;
        border: 1px solid $black;

        border-radius: 6px;
        flex-direction: row;

        > p {
            overflow: hidden;

            font-size: rem(16px, large);

            line-height: 1.7;

            white-space: nowrap;
            text-overflow: ellipsis;
        }
    }
}

.id-to-paste-container {
    display: flex;
    flex-direction: row-reverse;

    justify-content: space-between;
    align-items: center;

    flex-wrap: nowrap;

    vertical-align: center;


    .copy-id {
        width: 90px;

        margin-left: 10px;

        text-align: center;
    }

    .id-to-paste {
        width: 75%;
    }
}

// IMAGES
.image-section {
    display: flex;

    justify-content: space-between;
    flex-wrap: nowrap;
    flex-direction: row;

    @include respond-to('small') {
        flex-direction: column;
        gap: rem(15px, small)
    }

    @include respond-to('medium') {
        flex-direction: row;
        gap: unset;
    }


    .image-wrapper {
        .inputContainer {
            position: relative;

            input {
                z-index: 999;
                opacity: 0;

                position: absolute;
                top: 0;
                left: 0;

                width: 100%;
                height: 100%;

                cursor: pointer
            }

            .overlay {
                position: absolute;
                top: 0;
                left: 0;

                width: 100%;
                height: 100%;

                color: $black;

                text-align: center;

                background-color: $blackAlpha;

                border-radius: 6px;

                @include respond-to('small') {
                    font-size: rem(16px, small)
                }

                @include respond-to('medium') {
                    font-size: rem(16px, medium);
                }

                @include respond-to('large') {
                    font-size: rem(16px, large);
                }
            }
        }

        &.medium, &.large {
            border-radius: 6px;
        }

        &.medium .inputContainer {
            width: rem(310px, large);
            height: rem(155px, large);

            @include respond-to('small') {
                width: 100%;
                height: rem(155px, small);
            }

            @include respond-to('medium') {
                width: rem(310px, medium);
                height: rem(155px, medium);
            }

            @include respond-to('large') {
                width: rem(310px, large);
                height: rem(155px, large);
            }

        }

        &.large .inputContainer {
            width: rem(200px, large);
            height: rem(155px, large);

            @include respond-to('small') {
                width: 100%;
                height: rem(155px, small);
            }

            @include respond-to('medium') {
                width: rem(200px, medium);
                height: rem(155px, medium);
            }

            @include respond-to('large') {
                width: rem(200px, large);
                height: rem(155px, large);
            }
        }

        .previewImage {
            z-index: 998;

            position: absolute;
            top: 0;
            left: 0;

            width: 100%;
            height: 100%;

            border-radius: 6px;
            object-fit: cover;

        }
    }
}

// COULEURS LED
.colorsContainer {
    display: flex;

    justify-content: space-between;
    flex-wrap: nowrap;

    @include respond-to('small') {
        flex-direction: column;
        gap: rem(10px, small);
    }

    @include respond-to('medium') {
        flex-direction: row;
        gap: 0;
    }

    border-radius: 6px 6px 18px 18px;


    .label {
        margin-bottom: 10px;

        @include respond-to('small') {
            font-size: rem(16px, small);
        }

        @include respond-to('medium') {
            font-size: rem(16px, medium);
        }

        @include respond-to('large') {
            font-size: rem(16px, large);
        }
    }

    .color-picker-container {
        display: flex;
        position: relative;

        @include respond-to('small') {
            width: rem(227px, small);
            height: rem(34px, small);
        }

        @include respond-to('medium') {
            width: rem(227px, medium);
            height: rem(34px, medium);
        }

        @include respond-to('large') {
            width: rem(227px, large);
            height: rem(34px, large);
        }

        border-radius: 10px;
        flex-direction: row;

    }

    .hexa-code {
        display: flex;

        justify-content: center;
        align-items: center;

        width: 50%;
        height: 100%;

        color: $white;

        @include respond-to('small') {
            font-size: rem(16px, small);
        }

        @include respond-to('medium') {
            font-size: rem(16px, medium);
        }

        @include respond-to('large') {
            font-size: rem(16px, large);
        }

        background-color: $lightGrey;
        border-radius: 27px 0 0 27px;
    }

    .preview {
        width: 50%;
        height: 100%;

        border-radius: 0px 27px 27px 0px;
    }

    .color1 .verte {
        position: absolute;
        top: 0;
        left: 0;

        width: 100%;
        height: 100%;

        .verte__guide {
            width: 100%;
            height: 100%;
        }

        circle {
            opacity: 0;
        }
    }
}


// CUSTOM CHECKBOX
.default__check[type="checkbox"].switchbox {
    ~ .custom__check {
        border-radius: 50rem;

        &:after {
            @include respond-to('small') {
                width: rem(10px, small);
                height: rem(10px, small);
            }

            @include respond-to('medium') {
                width: rem(23px, medium);
                height: rem(23px, medium);
            }

            @include respond-to('large') {
                width: rem(23px, large);
                height: rem(23px, large);
            }

            background-color: $white;
            border-radius: 50rem;
        }
    }
}

.action-buttons {
    display: flex;
    flex-direction: row;

    justify-content: flex-end;

    &.edit {
        @include respond-to('small') {
            flex-direction: column;

            justify-content: center;
            gap: rem(35px, small);

            align-items: center;
        }

        @include respond-to('medium') {
            flex-direction: row;

            justify-content: flex-end;
            gap: rem(15px, medium);
        }

        & .second-row {
            display: flex;

            @include respond-to('small') {
                flex-direction: row;
                gap: rem(25px, small);
            }

            @include respond-to('medium') {
                flex-direction: row-reverse;
                gap: rem(15px, large);
            }
        }

        & .cancel-edit {
            text-decoration: underline;

            @include respond-to('small') {
                font-size: rem(16px, small);
            }

            @include respond-to('medium') {
                font-size: rem(16px, medium);
            }

            @include respond-to('large') {
                font-size: rem(16px, large);
            }
        }
    }

    .delete-btn {
        @include respond-to('small') {
            width: rem(15px, small);
        }

        @include respond-to('medium') {
            width: rem(20px, medium);
        }

        @include respond-to('large') {
            width: rem(20px, large);
        }
    }
}

.checkbox {

    .default__check[type="checkbox"]:not(.switchbox) {
        display: none;

        ~ .custom__check {
            display: flex;
            position: relative;

            align-items: center;

            @include respond-to('small') {
                width: rem(10px, small);
                height: rem(10px, small);
            }

            @include respond-to('medium') {
                width: rem(10px, medium);
                height: rem(10px, medium);
            }

            @include respond-to('large') {
                width: rem(10px, large);
                height: rem(10px, large);
            }

            background-color: $lightGrey;

            transition: all 0.4s ease;

            cursor: pointer;

        }

        ~ .custom__check {
            justify-content: center;

            @include respond-to('small') {
                width: rem(10px, small);
                height: rem(10px, small);
            }

            @include respond-to('medium') {
                width: rem(10px, medium);
                height: rem(10px, medium);
            }

            @include respond-to('large') {
                width: rem(10px, large);
                height: rem(10px, large);
            }
        }


        &:checked {
            ~ .custom__check {
                background-color: $purple;
            }
        }
    }
}

.default__check[type="checkbox"] {
    &:not(.switchbox) {
        ~ .custom__check {
            border-radius: 3rem;
        }
    }
}

#credits {
    height: 77px;

    @include respond-to('small') {
        height: rem(77px, small);
    }

    @include respond-to('medium') {
        height: initial;
    }
}

#tokenID {
    padding: 4px 10px;

    background-color: $yellowAlpha;
    @include respond-to('small') {
        height: rem(23px, small);

        margin: rem(5px, small) 0;

        font-size: rem(16px, small);
        line-height: rem(16px, small);
    }

    @include respond-to('medium') {
        height: rem(30px, medium);

        margin: rem(5px, medium) 0;

        font-size: rem(16px, medium);
        line-height: rem(16px, medium);
    }

    @include respond-to('large') {
        height: rem(30px, large);

        margin: rem(5px, large) 0;

        font-size: rem(16px, large);
        line-height: rem(16px, large);
    }
}

.token-id-btn {
    width: fit-content !important;
}


#description {
    height: 77px;
}

#descriptionLong {
    height: 140px;

    vertical-align: text-top;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;

    margin: 0;
}

/* Firefox */
input[type=number] {
    -moz-appearance: textfield;
}
